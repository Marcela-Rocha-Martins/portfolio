[
  {
    "id": 1,
    "name": "Cat x Machine",
    "details": {
      "title": "Cat x Machine",
      "description": "A browser-based game crafted using HTML, CSS, and pure JavaScript, applying DOM manipulation and Object-Oriented Programming (OOP) principles.</br></br>Cat X Machine is a simple endless runner game in which you navigate an orange cat, trying to evade drones and vacuum cleaners while collecting snacks to earn extra lives.</br></br><strong>Idea X Reality</strong></br>Of course, in the world of my ideas, I would have a game with more challenges, different levels, and a final 'you won' screen with various backgrounds and a more challenging dynamic. However, in reality, I only had 1 week of basic knowledge in Javascript and OOP.</br></br>I used Figma's whiteboards to create my project planning and tracking. You can check it out <span style='background-color: #ffff99; display: inline;'><a style='background-color: #ffff99;display: inline;' href='https://www.figma.com/file/XakjShYXWABxXowCvyWHzt/Game-project?type=whiteboard&amp;node-id=0%3A1&amp;t=O1ov8O5LxZpCMIHJ-1' target='_blank' rel='noopener noreferrer'>here</a></span></br></br><img src='https://i.pinimg.com/736x/e8/66/84/e866842f0d3998b35bc9420085800904.jpg' alt='figma' width='90%' height='90%' /></br></br>On the second day, when I still had squares in place of characters and my collision logic wasn't quite clear, I realized I would have to simplify my idea. I decided to focus on detailing the parallax effect on the background, character animations, and my cat's movement</br></br><strong>The Best Of</strong></br>I can confidently say that the highlight of my project was the gravity logic behind the movement of my kitten's jumps.</br></br>Initially, I only implemented basic up and down functionalities. However, I quickly realized there was room for improvement. I introduced two distinct movements: <strong>one for jumping (isJumping())</strong> and <strong>another for falling (isFalling())</strong>. These functionalities were linked to the up and down arrow keys, respectively. However, this setup resulted in frozen movements.</br></br>After extensive research, I came across a video discussing the concept of <strong>jump momentum</strong>. This involved breaking down the jump into smaller increments, simulating the effects of gravity over time. I dedicated an entire day to refining this aspect.</br></br>Following this, I focused on refining the visual style of the jump. I sourced a GIF of a jumping kitten and dissected it into individual frames, capturing both the ascent and descent motions.</br></br><strong>In short, I needed to imitate gravity.</strong></br></br>During the jump, the object's momentum gradually decreases as gravity opposes its upward motion and, during the fall, momentum increases as gravity accelerates the object downward.</br></br><img src=\"https://i.pinimg.com/736x/f3/2c/bd/f32cbdf254306893d9ec8ebbe4049b5d.jpg\" alt=\"cat jumping\" width=\"90%\" height=\"90%\" /></br></br>Hence, a series of calculations were necessary to determine the appropriate rate of deceleration with each movement iteration, ensuring that the object's velocity reaches zero at the specified height.",
      "technologies": ["JS", "CSS", "HTML"],
      "video": "https://www.youtube.com/embed/MgjM_ine2Bc?si=eNdPikYk0bEOx-F2&amp;controls=0&autoplay=1&mute=1&showinfo=0&loop=1&playlist=MgjM_ine2Bc",
      "photo": "/projectPagePhotos/CatXMachine.png",
      "live": "https://marcela-rocha-martins.github.io/project-game-catXmachine/",
      "github": "https://github.com/Marcela-Rocha-Martins/project-game-catXmachine"
    }
  },
  {
    "id": 2,
    "name": "AnchorNaut",
    "details": {
      "title": "AnchorNaut",
      "description": "Anchornaut is a full-stack project that empowers you to turn your wildest dreams into achievable and concrete personal projects. The platform leverages the <strong>OpenAI GPT (Generative Pre-trained Transformer) </strong> chat API to create a dynamic system where users can input their dreams, and the AI generates tasks and subtasks to help bring those dreams to life.<br/><br/>The project includes both a backend and a front-end component. Anchornaut utilizes <mark style='background-color:#D1D8CE'>MongoDB as its database, Node.js and Express.js on the server-side to provide a solid foundation. Security is reinforced with JSON Web Tokens (JWT) and bcrypt for authentication</mark>. Integration with OpenAI enables task generation based on user input.<br/><br/>On the frontend, React is the primary library for interface construction, with React Router Dom and React hooks for routing and state management. HTTP requests are efficiently handled with Axios. For more details, check out the GitHub repository.</br></br><mark style='background-color:#D1D8CE'>Important note¬†‚ö†Ô∏è</mark></br></br>I had very little experience with React and limited time to develop the project when I did it. (We had about a week to do everything.) So, I need to be honest and admit that there are several mistakes in this project, along with areas for improvement that I would like (and will) work on to refine my work.</br></br>Here's a list of them:</br></br><strong>1.</strong> The code is repetitive and verbose. I definitely wasn't a Clean Code enthusiast here, and I'm trying to improve on smaller projects I've taken on since then.</br></br><strong>2.</strong> For some reason (that only past Marcela understands), some classes are nameless, with styling code directly in the component. Changing this is in my plans.</br></br><strong>3.</strong> There are authentication issues for users that persist in the deployment. I'm still struggling to figure out how to solve them.</br></br>Beyond the errors, I need to say that given the time I had, the bold idea, and the knowledge at that time, it was a miracle to deliver the project. I'm studying and improving to fix the errors and be proud of the code behind this project with such a cool idea. üöÄ",
      "technologies": ["JS", "CSS", "React", "MongoDB", "Node & Express"],
      "video": "https://www.youtube.com/embed/w6dBE_EY2Y0?si=lthh7_woW1agL2AC&amp;controls=0&autoplay=1&mute=1&showinfo=0&loop=1&playlist=w6dBE_EY2Y0",
      "photo": "/projectPagePhotos/Anchornaut.png",
      "live": "https://anchornaut.netlify.app/",
      "github": "https://github.com/Marcela-Rocha-Martins/AnchorNaut-client"
    }
  },
  {
    "id": 3,
    "name": "Code Pen",
    "details": {
      "title": "Code Pen",
      "description": "Exercises and features",
      "technologies": ["CSS", "JavaScript", "HTML"],
      "video": "/projectPagePhotos/VideoTeste.mp4",
      "photo": "/projectPagePhotos/CodePen6.png",
      "live": "https://github.com/Marcela-Rocha-Martins/project-game-catXmachine/",
      "github": "https://marcela-rocha-martins.github.io/project-game-catXmachine/"
    }
  },
  {
    "id": 4,
    "name": "Feed",
    "details": {
      "title": "Feed",
      "description": "After completing my bootcamp at Ironhack Berlin, I realized the importance of revisiting <strong>fundamental JavaScript concepts</strong> and also delving into <strong>TypeScript</strong>. Therefore, I decided to begin by familiarize myself with basic interfaces and adopting a more understated style.</br></br>This project marks my first adventure into TypeScript, as I embark on a journey into the world of static typing features. Its objective is to <strong>simulate a social media feed</strong> similar to Twitter/X.</br></br>Since I was still in the early stages of learning TypeScript, the application's functionality remains fairly simple. It <strong>enables users to like comments and encourages dynamic interaction.</strong>",
      "technologies": ["CSS", "Typescript", "HTML", "React", "Vite"],
      "video": "https://www.youtube.com/embed/S601uFXIHz8?si=gvPbHqxnUofe6UE5&amp;controls=0&autoplay=1&mute=1&showinfo=0&loop=1&playlist=S601uFXIHz8",
      "photo": "/projectPagePhotos/feedphoto.png",
      "live": "https://react-project1-feed-typescript-dxvea8txu.vercel.app/",
      "github": "https://github.com/Marcela-Rocha-Martins/react-project1-feed-typescript"
    }
  },
  {
    "id": 5,
    "name": "My Portfolio",
    "details": {
      "title": "My Portfolio",
      "description":"The rumor is you need a portfolio to land your first web development job. So, naturally, I thought, why not? ü§∑&zwj;‚ôÄÔ∏è <br /><br />But here's the thing, instead of the usual stuff, I decided to spice things up by mimicking operating systems like Mac, LinkedIn, and email. This way, I could have something to inspire my design. It also provides something a bit different to show.<br /><br /><mark style='background-color: #d1d8ce;'><img src='https://i.pinimg.com/originals/aa/e8/af/aae8af80f2c330b4fa1a2bf0a23f607c.png' width='100%' height='90%' /></mark><br /><br /><mark style='background-color: #d1d8ce;'>I used <strong>Figma</strong> to facilitate the communication between design and styling in programming. The project was built using React, CSS, and Javascript.</mark> For window dragging, I incorporated a React package called <strong>Draggable.</strong>There's still A LOT to be improved, but I'm thrilled with the outcome!üòä",
      "technologies": ["CSS", "JavaScript", "HTML", "React"],
      "photo": "/projectPagePhotos/MyPortfolio.png",
      "live": "https://marcelarochamartins-webdev.vercel.app/",
      "github": "https://github.com/Marcela-Rocha-Martins/portfolio"
    }
  },
  {
    "id": 6,
    "name": "Timer",
    "details": {
      "title": "Timer",
      "description": "As a huge fan of the Pomodoro technique and all possible organization strategies, I thought about building a simple tool that would help me create productivity cycles with the freedom to apply the time I deemed necessary.<br /><br />This was my <strong>second project with Typescript</strong> with a simple interface of two pages centered around a timer functionality. <br /><br />Basically, users can set tasks and durations, and the app will manage and display the timers accordingly. Additionally, the app keeps track of previous timers in the 'archive' tab, allowing users to access their history of previous timers.",
      "technologies": ["CSS", "Typescript", "HTML", "React"],
      "video": "https://www.youtube.com/embed/w5_16M6IfZs?si=F0M7NKePCKl75uHO&amp;controls=0&autoplay=1&mute=1&showinfo=0&loop=1&playlist=w5_16M6IfZs",
      "photo": "/projectPagePhotos/timerphoto.png",
      "live": "https://react-project2-timer-typescript-7n43rb9ag.vercel.app/",
      "github": "https://github.com/Marcela-Rocha-Martins/react-project2-timer-typescript"
    }
  },
  {
    "id": 7,
    "name": "Habits Tracker",
    "details": {
      "title": "Habits Tracker",
      "description": "Habit Tracker was my third TypeScript project and the first one using Next.js. As someone who constantly strives to maintain consistency with my daily habits (even though I often fail in the majority of them), I created this simple web application.</br></br>Thinking about that, I've developed this straightforward web application that empowers users to monitor their daily habits, track progress towards personal goals, and aid in maintaining consistency and focus on significant habits.</br></br><strong>Features:</strong></br>- Habit registration: Users can effortlessly register new habits to monitor their progress.<br />- Progress visualization: A calendar view exhibits the history of habit completion over time.<br />- Flexibility: Users have the freedom to add, edit, or delete habits as necessary.<br />- Integration with Vercel KV: Data storage is seamlessly managed using Vercel KV, ensuring scalability and top-notch performance.<br /><br /><strong>Main technologies used:</strong><br />- Next.js<br />- Tailwind CSS<br />- Vercel KV",
      "technologies": [
        "CSS",
        "Typescript",
        "HTML",
        "React",
        "Next.Js"
      ],
      "video": "https://www.youtube.com/embed/k90X-gD7Tms?si=Chc9-fLakM5lqH6D&amp;controls=0&autoplay=1&mute=1&showinfo=0&loop=1&playlist=k90X-gD7Tms",
      "photo": "/projectPagePhotos/HabitsManager.png",
      "live": "https://habits-manager-mrm.vercel.app/",
      "github": "https://github.com/Marcela-Rocha-Martins/habits-manager-nextJs"
    }
  }
]
